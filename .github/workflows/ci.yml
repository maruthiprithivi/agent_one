name: CI

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.13"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install and configure UV
        run: |
          # Install UV with pip (more reliable than the curl method)
          pip install uv
          # Verify UV installation
          uv --version

      - name: Create virtual environment and install dependencies
        run: |
          # Create a virtual environment
          uv venv
          # Activate the virtual environment
          . .venv/bin/activate
          # Install the package and dev dependencies
          uv pip install -e .
          uv pip install pytest

      - name: Run tests
        run: |
          # Activate the virtual environment
          . .venv/bin/activate
          # Run tests
          python -m pytest

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install and configure UV
        run: |
          # Install UV with pip (more reliable than the curl method)
          pip install uv
          # Verify UV installation
          uv --version

      - name: Create virtual environment and install linting tools
        run: |
          # Create a virtual environment
          uv venv
          # Activate the virtual environment
          . .venv/bin/activate
          # Install linting tools
          uv pip install ruff black

      - name: Lint with Ruff
        run: |
          # Activate the virtual environment
          . .venv/bin/activate
          # Run Ruff
          ruff check agent_one --exclude '(^\.venv/)|(^agent_one/agent_one/__init__\.py$)'

      - name: Format check with Black
        run: |
          # Activate the virtual environment
          . .venv/bin/activate
          # Run Black
          black --check agent_one --exclude '(^\.venv/)|(^agent_one/agent_one/__init__\.py$)'
